{"version":3,"sources":["images/logo_white.png","images/logo.png","images/github_white.png","images/github.png","components/NavComponent.js","utils/StringUtils.js","components/LibraryComponent.js","api/npmAPI.js","api/GithubAPI.js","components/PackageViewComponent.js","App.js","reportWebVitals.js","theme.js","index.js"],"names":["Nav","props","useColorMode","colorMode","toggleColorMode","useState","searchTerm","setSearchTerm","useEffect","delayDebounceFn","setTimeout","onSearch","clearTimeout","bg","useColorModeValue","px","boxShadow","position","width","zIndex","h","alignItems","justifyContent","src","logo","logoWhite","style","height","className","placeholder","onChange","e","target","value","isLoading","size","marginLeft","direction","spacing","onClick","Moon","Sun","href","github","githubWhite","StringUtils","keywords","blockedKeywords","filter","item","includes","url","exec","LibraryComponent","marginTop","w","cursor","borderWidth","rounded","shadow","p","d","package","hasOwnProperty","filterKeywords","map","k","i","marginRight","fontSize","name","mt","alignContent","fontWeight","as","lineHeight","isTruncated","version","textAlign","color","description","NpmAPI","page","axios","get","strLink","replace","search","GithubAPI","repo","transformResponse","undefined","readme","post","text","PackageViewComponent","loading","setLoading","setPackageInfo","readMe","setReadMe","getPackageInfo","links","npm","then","r","data","renderReadme","collected","metadata","catch","markdownCSS","isOpen","placement","onClose","isFullHeight","display","dangerouslySetInnerHTML","__html","App","setPage","packages","setPackages","packagesNumber","setPackagesNumber","useDisclosure","onOpen","packageSelected","setPackageSelected","getPackages","results","total","textColor","t","searchPackage","paddingTop","dataLength","length","next","hasMore","loader","endMessage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad4d0cfe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_white.b469388c.png\";","export default __webpack_public_path__ + \"static/media/logo.89f062f0.png\";","export default __webpack_public_path__ + \"static/media/github_white.2b7b0475.png\";","export default __webpack_public_path__ + \"static/media/github.44eee0c4.png\";","import {ReactNode, useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Flex,\r\n    Avatar,\r\n    Link,\r\n    Button,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuDivider,\r\n    useDisclosure,\r\n    useColorModeValue,\r\n    Stack,\r\n    useColorMode,\r\n    Center, Input, Spinner,\r\n} from '@chakra-ui/react';\r\nimport { MoonIcon, SunIcon } from '@chakra-ui/icons';\r\nimport logoWhite from \"../images/logo_white.png\";\r\nimport logo from \"../images/logo.png\";\r\nimport githubWhite from \"../images/github_white.png\";\r\nimport github from \"../images/github.png\";\r\n\r\nconst NavLink = ({ children }) => (\r\n    <Link\r\n        px={2}\r\n        py={1}\r\n        rounded={'md'}\r\n        _hover={{\r\n            textDecoration: 'none',\r\n            bg: useColorModeValue('gray.200', 'gray.700'),\r\n        }}\r\n        href={'#'}>\r\n        {children}\r\n    </Link>\r\n);\r\n\r\nexport default function Nav(props) {\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() => {\r\n        const delayDebounceFn = setTimeout(() => {\r\n            props.onSearch(searchTerm);\r\n        }, 500)\r\n\r\n        return () => clearTimeout(delayDebounceFn)\r\n    }, [searchTerm])\r\n\r\n    return (\r\n        <>\r\n            <Box bg={useColorModeValue('white', 'gray.900')} px={4} boxShadow=\"sm\" position={\"fixed\"} width={\"100vw\"} zIndex={1000}>\r\n                <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n                    <Box>\r\n                        <img src={colorMode === 'light' ? logo : logoWhite} style={{height: 40}}/>\r\n                    </Box>\r\n\r\n                    <Flex alignItems={'center'} className={\"hide-mobile\"}>\r\n                        <Input placeholder=\"Search a React Library...\" width={400}  onChange={(e) => setSearchTerm(e.target.value)} />\r\n                        {props.isLoading && <Spinner size={\"sm\"} marginLeft={3}/>}\r\n                    </Flex>\r\n\r\n                    <Flex alignItems={'center'}>\r\n                        <Stack direction={'row'} spacing={3}>\r\n                            <Button onClick={toggleColorMode}>\r\n                                {colorMode === 'light' ? <MoonIcon /> : <SunIcon />}\r\n                            </Button>\r\n                            <a href={\"https://github.com/PHClement/awesome-react\"} target={\"_blank\"}>\r\n                                <Button>\r\n                                    {colorMode === 'light' ? <img src={github} style={{height: 20}}/> : <img src={githubWhite}  style={{height: 20}}/>}\r\n                                </Button>\r\n                            </a>\r\n                        </Stack>\r\n                    </Flex>\r\n                </Flex>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","export default class StringUtils {\r\n\r\n    static filterKeywords(keywords){\r\n        let blockedKeywords = [\r\n            \"react\", \"reactjs\", \"rx\", \"rxjs\", \"react-component\", \"react-native-component\", \"react-native\"\r\n        ];\r\n\r\n        return keywords.filter(item => !blockedKeywords.includes(item));\r\n    }\r\n\r\n    static getRepo(url){\r\n        const regex = /(?:git@|https:\\/\\/)github.com[:\\/](.*)/gm;\r\n        let match = regex.exec(url);\r\n\r\n        return match[1];\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport {Badge, Box, Flex, Text, useColorModeValue} from \"@chakra-ui/react\";\r\nimport StringUtils from \"../utils/StringUtils\";\r\n\r\nexport default function LibraryComponent(props){\r\n    return (\r\n        <Flex marginTop={5} w=\"full\" alignItems=\"center\" justifyContent=\"center\" cursor={\"pointer\"} onClick={() => props.onClick()}>\r\n            <Box\r\n                bg={useColorModeValue('white', 'gray.800')}\r\n                width=\"lg\"\r\n                borderWidth=\"1px\"\r\n                rounded=\"lg\"\r\n                shadow=\"lg\"\r\n                position=\"relative\">\r\n                <Box p=\"6\">\r\n                    <Box d=\"flex\" alignItems=\"baseline\">\r\n                        {props.package.package.hasOwnProperty(\"keywords\") ?\r\n                            StringUtils.filterKeywords(props.package.package.keywords).map((k, i) => {\r\n                                if(i < 3) return (\r\n                                    <Badge rounded=\"full\" px=\"2\" marginRight={1} fontSize=\"0.8em\" key={\"keyword-\" + props.package.name + \"-\" + i}>\r\n                                        {k}\r\n                                    </Badge>\r\n                                )\r\n                            }) : (\r\n                                <Badge rounded=\"full\" px=\"2\" fontSize=\"0.8em\">\r\n                                    React\r\n                                </Badge>\r\n                        )}\r\n                    </Box>\r\n                    <Flex mt=\"1\" justifyContent=\"space-between\" alignContent=\"center\">\r\n                        <Box\r\n                            fontSize=\"2xl\"\r\n                            fontWeight=\"semibold\"\r\n                            as=\"h4\"\r\n                            lineHeight=\"tight\"\r\n                            isTruncated>\r\n                            {props.package.package.name ? props.package.package.name : 'Unknown package name'}  <Badge>{props.package.package.version}</Badge>\r\n                        </Box>\r\n                    </Flex>\r\n\r\n                    <Flex justifyContent=\"space-between\" alignContent=\"center\">\r\n                            <Text fontSize={\"sm\"} textAlign={\"left\"} color={useColorModeValue('gray.800', 'gray.400')}>{props.package.package.description}</Text>\r\n                    </Flex>\r\n                </Box>\r\n            </Box>\r\n        </Flex>\r\n    );\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default class NpmAPI {\r\n\r\n    static getPackages(page){\r\n        return axios.get('https://api.npms.io/v2/search?q=react-component+not:deprecated,insecure+keywords:-react-native+keywords:-vue+keywords:-angular+boost-exact:false&from=' + (100 * page) + '&size=' + 100);\r\n    }\r\n\r\n    static getPackageInfo(name){\r\n        let strLink = name.replace('https://www.npmjs.com/package/', '');\r\n\r\n        return axios.get('https://api.npms.io/v2/package/' + strLink);\r\n    }\r\n\r\n    static searchPackage(search){\r\n        return axios.get('https://api.npms.io/v2/search?q=' + search + '+not:deprecated,insecure+keywords:-react-native+keywords:-vue+keywords:-angular+boost-exact:false&size=' + 100);\r\n    }\r\n\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default class GithubAPI {\r\n\r\n    static getREADME(repo){\r\n        return axios.get('https://raw.githubusercontent.com/' + repo + '/master/README.md', {transformResponse: undefined});\r\n    }\r\n\r\n    static renderReadme(readme){\r\n        return axios.post('https://api.github.com/markdown', {text: readme},{transformResponse: undefined});\r\n    }\r\n\r\n}\r\n","import {\n    Drawer,\n    DrawerBody,\n    DrawerCloseButton,\n    DrawerContent,\n    DrawerHeader,\n    DrawerOverlay,\n    Spinner,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\nimport {useEffect, useState} from \"react\";\nimport NpmAPI from \"../api/npmAPI\";\nimport GithubAPI from \"../api/GithubAPI\";\nimport \"../styles/Markdown.css\";\nimport \"../styles/Markdown_dark.css\";\n\nexport default function PackageViewComponent(props) {\n\n    const [loading, setLoading] = useState(true);\n    const [packageInfo, setPackageInfo] = useState(undefined);\n    const [readMe, setReadMe] = useState('');\n\n    useEffect(() => {\n        NpmAPI.getPackageInfo(props.package.links.npm).then(r => {\n            setPackageInfo(r.data);\n            GithubAPI.renderReadme(r.data.collected.metadata.readme).then(r => {\n                setLoading(false);\n                setReadMe(r.data);\n            }).catch(e => {\n                setLoading(false);\n                setReadMe(\"<p>ReadMe not available !</p>\");\n            })\n        });\n    }, []);\n\n    let markdownCSS = useColorModeValue(\"markdown-body\", \"markdown-body-dark\");\n\n    return (\n        <Drawer\n            isOpen={props.isOpen}\n            placement=\"bottom\"\n            onClose={props.onClose}\n            isFullHeight\n        >\n            <DrawerOverlay/>\n            <DrawerContent>\n                <DrawerCloseButton/>\n                <DrawerHeader>{props.package.name}</DrawerHeader>\n\n                <DrawerBody>\n                    {loading ? (\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                            <Spinner/>\n                        </div>\n                    ) : (\n                        <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                            <div dangerouslySetInnerHTML={{__html: readMe}} className={markdownCSS}></div>\n                        </div>\n                    )}\n                </DrawerBody>\n            </DrawerContent>\n        </Drawer>\n    );\n}\n","import './styles/App.css';\nimport Nav from \"./components/NavComponent\";\nimport {Spinner, Text, useColorModeValue, useDisclosure, VStack} from \"@chakra-ui/react\";\nimport LibraryComponent from \"./components/LibraryComponent\";\nimport {useEffect, useState} from \"react\";\nimport NpmAPI from \"./api/npmAPI\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport PackageViewComponent from \"./components/PackageViewComponent\";\n\nfunction App() {\n    const [loading, setLoading] = useState(true);\n    const [page, setPage] = useState(0);\n    const [packages, setPackages] = useState([]);\n    const [packagesNumber, setPackagesNumber] = useState(0);\n\n    // Modal Package view\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const [packageSelected, setPackageSelected] = useState(undefined);\n\n    useEffect(() => {\n        NpmAPI.getPackages(page).then(r => {\n            setPackages(r.data.results);\n            setPackagesNumber(r.data.total);\n            setLoading(false);\n        });\n    }, []);\n\n    let textColor = useColorModeValue('grey.400', 'grey.400');\n\n    return (\n        <div className=\"App\">\n            <Nav onSearch={(t) => {\n                setLoading(true);\n                if(t == ''){\n                    NpmAPI.getPackages(page).then(r => {\n                        setPackages(r.data.results);\n                        setPackagesNumber(r.data.total);\n                        setLoading(false);\n                    });\n                }else{\n                    NpmAPI.searchPackage(t).then(r => {\n                        setPackages(r.data.results);\n                        setPackagesNumber(r.data.total);\n                        setLoading(false);\n                    });\n                }\n            }} isLoading={loading}/>\n\n            <div style={{paddingTop: 75}}>\n                {!loading && (\n                    <Text fontSize=\"sm\" textColor={textColor}>Approximately {packagesNumber} results</Text>\n                )}\n\n                <InfiniteScroll\n                    dataLength={packages.length}\n                    next={() => {\n                        NpmAPI.getPackages(page + 1).then(r => {\n                            setPackages([...packages, ...r.data.results]);\n                            setPage(page + 1);\n                        });\n                    }}\n                    hasMore={true}\n                    loader={<Spinner marginTop={10} />}\n                    endMessage={\n                        <p style={{ textAlign: 'center' }}>\n                            <b>Yay! You have seen it all 🥱</b>\n                        </p>\n                    }\n                >\n                    {packages.map((p, k) => (\n                        <LibraryComponent key={k} package={p} onClick={() => {\n                            setPackageSelected(p.package);\n                            onOpen()\n                        }}/>\n                    ))}\n                </InfiniteScroll>\n            </div>\n\n            {packageSelected !== undefined && (\n                <PackageViewComponent onOpen={onOpen} onClose={() => {\n                    onClose();\n                    setTimeout(() => {\n                        setPackageSelected(undefined);\n                    }, 200);\n                }} isOpen={isOpen} package={packageSelected}/>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { extendTheme } from \"@chakra-ui/react\"\r\nimport { mode } from \"@chakra-ui/theme-tools\"\r\n\r\nconst config = {\r\n    initialColorMode: \"dark\",\r\n    useSystemColorMode: false,\r\n}\r\n\r\nconst theme = extendTheme({\r\n    config\r\n})\r\n\r\nexport default theme\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ChakraProvider theme={theme}>\n          <App />\n      </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}